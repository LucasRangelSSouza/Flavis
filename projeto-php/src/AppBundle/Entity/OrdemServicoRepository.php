<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Entity;

/**
 * OrdemServicoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrdemServicoRepository extends EntityRepository
{
    /**
     * @param int $offset
     * @param int $limit
     * @return array
     */
    public function findOsAbertas($offset = 0, $limit = 20, $colaborador)
    {
        $query = $this->getEntityManager()->createQuery("
            SELECT o FROM AppBundle:OrdemServico o
            WHERE o.isSync = :sync AND
            o.isHomologada = :homol AND
            o.colaboradorExecutor = :colaboradorExecutor
            ORDER BY o.updatedAt DESC
        ");

        $query->setParameter('sync', false);
        $query->setParameter('homol', false);
        $query->setParameter('colaboradorExecutor', $colaborador);
        $query->setMaxResults($limit);
        $query->setFirstResult($offset);

        return $query->getResult();
    }

	/**
	 * @param \DateTime $date
	 * @param int $offset
	 * @param int $limit
	 * @return array
	 */
	public function findOsAbertasUpdatedAfter(\DateTime $date, $offset = 0, $limit = 20, $colaborador)
	{
		$query = $this->getEntityManager()->createQuery("
            SELECT o FROM AppBundle:OrdemServico o
            WHERE o.isSync = :sync AND
            o.isHomologada = :homol AND
            o.createdAt > :createdAt AND
            o.colaboradorExecutor = :colaboradorExecutor
            ORDER BY o.updatedAt DESC
        ");

		$query->setParameter('sync', false);
		$query->setParameter('homol', false);
		$query->setParameter('createdAt', $date);
		$query->setParameter('colaboradorExecutor', $colaborador);
		$query->setMaxResults($limit);
		$query->setFirstResult($offset);

		return $query->getResult();

	}
}
