package br.com.logics.flavis.model.repository.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import br.com.logics.flavis.model.entities.cliente.Cliente;
import br.com.logics.flavis.model.entities.cliente.JoinClienteWithResponsavel;
import br.com.logics.flavis.model.entities.cliente.Responsavel;
import br.com.logics.flavis.model.entities.cliente.Telefone;
import br.com.logics.flavis.model.entities.cliente.TipoTelefone;
import br.com.logics.flavis.model.entities.colaborador.Colaborador;
import br.com.logics.flavis.model.entities.colaborador.Funcao;
import br.com.logics.flavis.model.entities.colaborador.User;
import br.com.logics.flavis.model.entities.endereco.Bairro;
import br.com.logics.flavis.model.entities.endereco.Cidade;
import br.com.logics.flavis.model.entities.endereco.Endereco;
import br.com.logics.flavis.model.entities.endereco.TipoEndereco;
import br.com.logics.flavis.model.entities.equipamento.Equipamento;
import br.com.logics.flavis.model.entities.equipamento.Marca;
import br.com.logics.flavis.model.entities.equipamento.Modelo;
import br.com.logics.flavis.model.entities.equipamento.PropriedadeEquipamento;
import br.com.logics.flavis.model.entities.equipamento.TituloPropriedade;
import br.com.logics.flavis.model.entities.equipamento.TituloValor;
import br.com.logics.flavis.model.entities.equipamento.Valor;
import br.com.logics.flavis.model.entities.idle_activity.IdleActivity;
import br.com.logics.flavis.model.entities.location.LocationRegister;
import br.com.logics.flavis.model.entities.os.FotoOS;
import br.com.logics.flavis.model.entities.os.OS;
import br.com.logics.flavis.model.entities.os.procedimento.ClienteEquipamento;
import br.com.logics.flavis.model.entities.os.procedimento.ExecucaoProcedimento;
import br.com.logics.flavis.model.entities.os.procedimento.FotoProcedimento;
import br.com.logics.flavis.model.entities.os.procedimento.Procedimento;
import br.com.logics.flavis.model.entities.os.procedimento.TituloProcedimento;

import br.com.logics.flavis.model.repository.dao.ClienteDao;
import br.com.logics.flavis.model.repository.dao.JoinClienteWithResponsavelDao;
import br.com.logics.flavis.model.repository.dao.ResponsavelDao;
import br.com.logics.flavis.model.repository.dao.TelefoneDao;
import br.com.logics.flavis.model.repository.dao.TipoTelefoneDao;
import br.com.logics.flavis.model.repository.dao.ColaboradorDao;
import br.com.logics.flavis.model.repository.dao.FuncaoDao;
import br.com.logics.flavis.model.repository.dao.UserDao;
import br.com.logics.flavis.model.repository.dao.BairroDao;
import br.com.logics.flavis.model.repository.dao.CidadeDao;
import br.com.logics.flavis.model.repository.dao.EnderecoDao;
import br.com.logics.flavis.model.repository.dao.TipoEnderecoDao;
import br.com.logics.flavis.model.repository.dao.EquipamentoDao;
import br.com.logics.flavis.model.repository.dao.MarcaDao;
import br.com.logics.flavis.model.repository.dao.ModeloDao;
import br.com.logics.flavis.model.repository.dao.PropriedadeEquipamentoDao;
import br.com.logics.flavis.model.repository.dao.TituloPropriedadeDao;
import br.com.logics.flavis.model.repository.dao.TituloValorDao;
import br.com.logics.flavis.model.repository.dao.ValorDao;
import br.com.logics.flavis.model.repository.dao.IdleActivityDao;
import br.com.logics.flavis.model.repository.dao.LocationRegisterDao;
import br.com.logics.flavis.model.repository.dao.FotoOSDao;
import br.com.logics.flavis.model.repository.dao.OSDao;
import br.com.logics.flavis.model.repository.dao.ClienteEquipamentoDao;
import br.com.logics.flavis.model.repository.dao.ExecucaoProcedimentoDao;
import br.com.logics.flavis.model.repository.dao.FotoProcedimentoDao;
import br.com.logics.flavis.model.repository.dao.ProcedimentoDao;
import br.com.logics.flavis.model.repository.dao.TituloProcedimentoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig clienteDaoConfig;
    private final DaoConfig joinClienteWithResponsavelDaoConfig;
    private final DaoConfig responsavelDaoConfig;
    private final DaoConfig telefoneDaoConfig;
    private final DaoConfig tipoTelefoneDaoConfig;
    private final DaoConfig colaboradorDaoConfig;
    private final DaoConfig funcaoDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig bairroDaoConfig;
    private final DaoConfig cidadeDaoConfig;
    private final DaoConfig enderecoDaoConfig;
    private final DaoConfig tipoEnderecoDaoConfig;
    private final DaoConfig equipamentoDaoConfig;
    private final DaoConfig marcaDaoConfig;
    private final DaoConfig modeloDaoConfig;
    private final DaoConfig propriedadeEquipamentoDaoConfig;
    private final DaoConfig tituloPropriedadeDaoConfig;
    private final DaoConfig tituloValorDaoConfig;
    private final DaoConfig valorDaoConfig;
    private final DaoConfig idleActivityDaoConfig;
    private final DaoConfig locationRegisterDaoConfig;
    private final DaoConfig fotoOSDaoConfig;
    private final DaoConfig oSDaoConfig;
    private final DaoConfig clienteEquipamentoDaoConfig;
    private final DaoConfig execucaoProcedimentoDaoConfig;
    private final DaoConfig fotoProcedimentoDaoConfig;
    private final DaoConfig procedimentoDaoConfig;
    private final DaoConfig tituloProcedimentoDaoConfig;

    private final ClienteDao clienteDao;
    private final JoinClienteWithResponsavelDao joinClienteWithResponsavelDao;
    private final ResponsavelDao responsavelDao;
    private final TelefoneDao telefoneDao;
    private final TipoTelefoneDao tipoTelefoneDao;
    private final ColaboradorDao colaboradorDao;
    private final FuncaoDao funcaoDao;
    private final UserDao userDao;
    private final BairroDao bairroDao;
    private final CidadeDao cidadeDao;
    private final EnderecoDao enderecoDao;
    private final TipoEnderecoDao tipoEnderecoDao;
    private final EquipamentoDao equipamentoDao;
    private final MarcaDao marcaDao;
    private final ModeloDao modeloDao;
    private final PropriedadeEquipamentoDao propriedadeEquipamentoDao;
    private final TituloPropriedadeDao tituloPropriedadeDao;
    private final TituloValorDao tituloValorDao;
    private final ValorDao valorDao;
    private final IdleActivityDao idleActivityDao;
    private final LocationRegisterDao locationRegisterDao;
    private final FotoOSDao fotoOSDao;
    private final OSDao oSDao;
    private final ClienteEquipamentoDao clienteEquipamentoDao;
    private final ExecucaoProcedimentoDao execucaoProcedimentoDao;
    private final FotoProcedimentoDao fotoProcedimentoDao;
    private final ProcedimentoDao procedimentoDao;
    private final TituloProcedimentoDao tituloProcedimentoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        clienteDaoConfig = daoConfigMap.get(ClienteDao.class).clone();
        clienteDaoConfig.initIdentityScope(type);

        joinClienteWithResponsavelDaoConfig = daoConfigMap.get(JoinClienteWithResponsavelDao.class).clone();
        joinClienteWithResponsavelDaoConfig.initIdentityScope(type);

        responsavelDaoConfig = daoConfigMap.get(ResponsavelDao.class).clone();
        responsavelDaoConfig.initIdentityScope(type);

        telefoneDaoConfig = daoConfigMap.get(TelefoneDao.class).clone();
        telefoneDaoConfig.initIdentityScope(type);

        tipoTelefoneDaoConfig = daoConfigMap.get(TipoTelefoneDao.class).clone();
        tipoTelefoneDaoConfig.initIdentityScope(type);

        colaboradorDaoConfig = daoConfigMap.get(ColaboradorDao.class).clone();
        colaboradorDaoConfig.initIdentityScope(type);

        funcaoDaoConfig = daoConfigMap.get(FuncaoDao.class).clone();
        funcaoDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        bairroDaoConfig = daoConfigMap.get(BairroDao.class).clone();
        bairroDaoConfig.initIdentityScope(type);

        cidadeDaoConfig = daoConfigMap.get(CidadeDao.class).clone();
        cidadeDaoConfig.initIdentityScope(type);

        enderecoDaoConfig = daoConfigMap.get(EnderecoDao.class).clone();
        enderecoDaoConfig.initIdentityScope(type);

        tipoEnderecoDaoConfig = daoConfigMap.get(TipoEnderecoDao.class).clone();
        tipoEnderecoDaoConfig.initIdentityScope(type);

        equipamentoDaoConfig = daoConfigMap.get(EquipamentoDao.class).clone();
        equipamentoDaoConfig.initIdentityScope(type);

        marcaDaoConfig = daoConfigMap.get(MarcaDao.class).clone();
        marcaDaoConfig.initIdentityScope(type);

        modeloDaoConfig = daoConfigMap.get(ModeloDao.class).clone();
        modeloDaoConfig.initIdentityScope(type);

        propriedadeEquipamentoDaoConfig = daoConfigMap.get(PropriedadeEquipamentoDao.class).clone();
        propriedadeEquipamentoDaoConfig.initIdentityScope(type);

        tituloPropriedadeDaoConfig = daoConfigMap.get(TituloPropriedadeDao.class).clone();
        tituloPropriedadeDaoConfig.initIdentityScope(type);

        tituloValorDaoConfig = daoConfigMap.get(TituloValorDao.class).clone();
        tituloValorDaoConfig.initIdentityScope(type);

        valorDaoConfig = daoConfigMap.get(ValorDao.class).clone();
        valorDaoConfig.initIdentityScope(type);

        idleActivityDaoConfig = daoConfigMap.get(IdleActivityDao.class).clone();
        idleActivityDaoConfig.initIdentityScope(type);

        locationRegisterDaoConfig = daoConfigMap.get(LocationRegisterDao.class).clone();
        locationRegisterDaoConfig.initIdentityScope(type);

        fotoOSDaoConfig = daoConfigMap.get(FotoOSDao.class).clone();
        fotoOSDaoConfig.initIdentityScope(type);

        oSDaoConfig = daoConfigMap.get(OSDao.class).clone();
        oSDaoConfig.initIdentityScope(type);

        clienteEquipamentoDaoConfig = daoConfigMap.get(ClienteEquipamentoDao.class).clone();
        clienteEquipamentoDaoConfig.initIdentityScope(type);

        execucaoProcedimentoDaoConfig = daoConfigMap.get(ExecucaoProcedimentoDao.class).clone();
        execucaoProcedimentoDaoConfig.initIdentityScope(type);

        fotoProcedimentoDaoConfig = daoConfigMap.get(FotoProcedimentoDao.class).clone();
        fotoProcedimentoDaoConfig.initIdentityScope(type);

        procedimentoDaoConfig = daoConfigMap.get(ProcedimentoDao.class).clone();
        procedimentoDaoConfig.initIdentityScope(type);

        tituloProcedimentoDaoConfig = daoConfigMap.get(TituloProcedimentoDao.class).clone();
        tituloProcedimentoDaoConfig.initIdentityScope(type);

        clienteDao = new ClienteDao(clienteDaoConfig, this);
        joinClienteWithResponsavelDao = new JoinClienteWithResponsavelDao(joinClienteWithResponsavelDaoConfig, this);
        responsavelDao = new ResponsavelDao(responsavelDaoConfig, this);
        telefoneDao = new TelefoneDao(telefoneDaoConfig, this);
        tipoTelefoneDao = new TipoTelefoneDao(tipoTelefoneDaoConfig, this);
        colaboradorDao = new ColaboradorDao(colaboradorDaoConfig, this);
        funcaoDao = new FuncaoDao(funcaoDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        bairroDao = new BairroDao(bairroDaoConfig, this);
        cidadeDao = new CidadeDao(cidadeDaoConfig, this);
        enderecoDao = new EnderecoDao(enderecoDaoConfig, this);
        tipoEnderecoDao = new TipoEnderecoDao(tipoEnderecoDaoConfig, this);
        equipamentoDao = new EquipamentoDao(equipamentoDaoConfig, this);
        marcaDao = new MarcaDao(marcaDaoConfig, this);
        modeloDao = new ModeloDao(modeloDaoConfig, this);
        propriedadeEquipamentoDao = new PropriedadeEquipamentoDao(propriedadeEquipamentoDaoConfig, this);
        tituloPropriedadeDao = new TituloPropriedadeDao(tituloPropriedadeDaoConfig, this);
        tituloValorDao = new TituloValorDao(tituloValorDaoConfig, this);
        valorDao = new ValorDao(valorDaoConfig, this);
        idleActivityDao = new IdleActivityDao(idleActivityDaoConfig, this);
        locationRegisterDao = new LocationRegisterDao(locationRegisterDaoConfig, this);
        fotoOSDao = new FotoOSDao(fotoOSDaoConfig, this);
        oSDao = new OSDao(oSDaoConfig, this);
        clienteEquipamentoDao = new ClienteEquipamentoDao(clienteEquipamentoDaoConfig, this);
        execucaoProcedimentoDao = new ExecucaoProcedimentoDao(execucaoProcedimentoDaoConfig, this);
        fotoProcedimentoDao = new FotoProcedimentoDao(fotoProcedimentoDaoConfig, this);
        procedimentoDao = new ProcedimentoDao(procedimentoDaoConfig, this);
        tituloProcedimentoDao = new TituloProcedimentoDao(tituloProcedimentoDaoConfig, this);

        registerDao(Cliente.class, clienteDao);
        registerDao(JoinClienteWithResponsavel.class, joinClienteWithResponsavelDao);
        registerDao(Responsavel.class, responsavelDao);
        registerDao(Telefone.class, telefoneDao);
        registerDao(TipoTelefone.class, tipoTelefoneDao);
        registerDao(Colaborador.class, colaboradorDao);
        registerDao(Funcao.class, funcaoDao);
        registerDao(User.class, userDao);
        registerDao(Bairro.class, bairroDao);
        registerDao(Cidade.class, cidadeDao);
        registerDao(Endereco.class, enderecoDao);
        registerDao(TipoEndereco.class, tipoEnderecoDao);
        registerDao(Equipamento.class, equipamentoDao);
        registerDao(Marca.class, marcaDao);
        registerDao(Modelo.class, modeloDao);
        registerDao(PropriedadeEquipamento.class, propriedadeEquipamentoDao);
        registerDao(TituloPropriedade.class, tituloPropriedadeDao);
        registerDao(TituloValor.class, tituloValorDao);
        registerDao(Valor.class, valorDao);
        registerDao(IdleActivity.class, idleActivityDao);
        registerDao(LocationRegister.class, locationRegisterDao);
        registerDao(FotoOS.class, fotoOSDao);
        registerDao(OS.class, oSDao);
        registerDao(ClienteEquipamento.class, clienteEquipamentoDao);
        registerDao(ExecucaoProcedimento.class, execucaoProcedimentoDao);
        registerDao(FotoProcedimento.class, fotoProcedimentoDao);
        registerDao(Procedimento.class, procedimentoDao);
        registerDao(TituloProcedimento.class, tituloProcedimentoDao);
    }
    
    public void clear() {
        clienteDaoConfig.clearIdentityScope();
        joinClienteWithResponsavelDaoConfig.clearIdentityScope();
        responsavelDaoConfig.clearIdentityScope();
        telefoneDaoConfig.clearIdentityScope();
        tipoTelefoneDaoConfig.clearIdentityScope();
        colaboradorDaoConfig.clearIdentityScope();
        funcaoDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        bairroDaoConfig.clearIdentityScope();
        cidadeDaoConfig.clearIdentityScope();
        enderecoDaoConfig.clearIdentityScope();
        tipoEnderecoDaoConfig.clearIdentityScope();
        equipamentoDaoConfig.clearIdentityScope();
        marcaDaoConfig.clearIdentityScope();
        modeloDaoConfig.clearIdentityScope();
        propriedadeEquipamentoDaoConfig.clearIdentityScope();
        tituloPropriedadeDaoConfig.clearIdentityScope();
        tituloValorDaoConfig.clearIdentityScope();
        valorDaoConfig.clearIdentityScope();
        idleActivityDaoConfig.clearIdentityScope();
        locationRegisterDaoConfig.clearIdentityScope();
        fotoOSDaoConfig.clearIdentityScope();
        oSDaoConfig.clearIdentityScope();
        clienteEquipamentoDaoConfig.clearIdentityScope();
        execucaoProcedimentoDaoConfig.clearIdentityScope();
        fotoProcedimentoDaoConfig.clearIdentityScope();
        procedimentoDaoConfig.clearIdentityScope();
        tituloProcedimentoDaoConfig.clearIdentityScope();
    }

    public ClienteDao getClienteDao() {
        return clienteDao;
    }

    public JoinClienteWithResponsavelDao getJoinClienteWithResponsavelDao() {
        return joinClienteWithResponsavelDao;
    }

    public ResponsavelDao getResponsavelDao() {
        return responsavelDao;
    }

    public TelefoneDao getTelefoneDao() {
        return telefoneDao;
    }

    public TipoTelefoneDao getTipoTelefoneDao() {
        return tipoTelefoneDao;
    }

    public ColaboradorDao getColaboradorDao() {
        return colaboradorDao;
    }

    public FuncaoDao getFuncaoDao() {
        return funcaoDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public BairroDao getBairroDao() {
        return bairroDao;
    }

    public CidadeDao getCidadeDao() {
        return cidadeDao;
    }

    public EnderecoDao getEnderecoDao() {
        return enderecoDao;
    }

    public TipoEnderecoDao getTipoEnderecoDao() {
        return tipoEnderecoDao;
    }

    public EquipamentoDao getEquipamentoDao() {
        return equipamentoDao;
    }

    public MarcaDao getMarcaDao() {
        return marcaDao;
    }

    public ModeloDao getModeloDao() {
        return modeloDao;
    }

    public PropriedadeEquipamentoDao getPropriedadeEquipamentoDao() {
        return propriedadeEquipamentoDao;
    }

    public TituloPropriedadeDao getTituloPropriedadeDao() {
        return tituloPropriedadeDao;
    }

    public TituloValorDao getTituloValorDao() {
        return tituloValorDao;
    }

    public ValorDao getValorDao() {
        return valorDao;
    }

    public IdleActivityDao getIdleActivityDao() {
        return idleActivityDao;
    }

    public LocationRegisterDao getLocationRegisterDao() {
        return locationRegisterDao;
    }

    public FotoOSDao getFotoOSDao() {
        return fotoOSDao;
    }

    public OSDao getOSDao() {
        return oSDao;
    }

    public ClienteEquipamentoDao getClienteEquipamentoDao() {
        return clienteEquipamentoDao;
    }

    public ExecucaoProcedimentoDao getExecucaoProcedimentoDao() {
        return execucaoProcedimentoDao;
    }

    public FotoProcedimentoDao getFotoProcedimentoDao() {
        return fotoProcedimentoDao;
    }

    public ProcedimentoDao getProcedimentoDao() {
        return procedimentoDao;
    }

    public TituloProcedimentoDao getTituloProcedimentoDao() {
        return tituloProcedimentoDao;
    }

}
